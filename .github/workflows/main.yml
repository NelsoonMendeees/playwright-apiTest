name: Playwright API Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: dba
          POSTGRES_PASSWORD: dba
          POSTGRES_DB: ShortDB
        options: >-
          --health-cmd="pg_isready -U dba -d ShortDB"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      shortb-api:
        image: beyondtest/shortb-api:hotfix
        ports:
          - 3333:3333
        env:
          PORT: 3333
          DATABASE_URL: postgres://dba:dba@postgres:5432/ShortDB?sslmode=disable
          JWT_SECRET: vaiplaneta
        options: >-
          --health-cmd="curl --fail http://localhost:3333/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

      shortb-web:
        image: beyondtest/shortb-web:latest
        ports:
          - 8080:80
        options: >-
          --health-cmd="curl --fail http://localhost:80 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Wait for API
        run: |
          echo "Aguardando API subir..."
          for i in {1..30}; do
            if curl -s http://localhost:3333/health > /dev/null; then
              echo "API disponível!"
              exit 0
            fi
            sleep 2
          done
          echo "API não respondeu a tempo"
          exit 1

      - name: Run Playwright tests
        run: npm run pw-run -- --reporter=html

      - name: Upload Playwright HTML Report
        if: always() # garante que o relatório será salvo mesmo se os testes falharem
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
